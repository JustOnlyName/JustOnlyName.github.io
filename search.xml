<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[miscellaneous_杂项]]></title>
    <url>%2F2018%2F12%2F25%2Fmiscellaneous_%E6%9D%82%E9%A1%B9%2F</url>
    <content type="text"><![CDATA[作为一名各种方面赤果果的新手，在博客搭建方面、markdown、计算机……遇到很多问题，姑且先记录下来，以便为日后思考解决方案。同样那句话，好记性不如烂键盘膜. MarkDownPad2相关1. 无法输入中文 新建一篇博文，打开后无法输入中文内容 将应用程序Tools→Options更换为English格式，不要使用中文格式 2. 表格 在https://c-xuan.com/download/table2code.xlsm下载文件用于Excel文件转表格代码 1a2b3c4d5e5e6f 添加表格的扩展 工具 》选项 》 Markdown 》Markdown处理器 改为 “Markdown(扩展)”即可。 \| daf | fdasf | fdasf | fdsa | fdas ||——|——-|——-|——|——|| fads | | fsad | fdas | fda || | fdsa | fdsa | fsda | fda || fsda | fsad | fdsa | | fads | \第一列表头在\&lt;td(th) rowspan=”4”&gt;的作用下无法顺利去掉，跨行那一单元格无法到第一列 fdasf fdasfffffff fdsa fdas df 跨行 d 注意：表格区域上下必须留有空格表格内进行换行\居中处理：在“—-”前后添加冒号 或使用Table generator 我占了三行 第一列 第二列 第三列 第一列 第二列 第三列 第一列 第二列 第三列 结论 使用普通Excel样式不需要特殊要求的，使用markdown语法编写表格 使用特殊，跨行跨列使用html语法 3. 使用内嵌HTML语言设置font宋体红色黑体7号红色黑体 Hexo相关1. hexo n &quot;..&quot;后设置password值 不能乱测试，不知为何，设置相关value之后更改无法实现 将password删除，进入博文内容仍需password 更换为其他value值，网页仍使用原value值 已解决，只需等待更新即可 2. can not read a block mapping entry某个.md文档编译错误 这种错误常见解决方法 在错误的地方重新输入，手打 在：后面一定要有空格 “：”要用英文格式 3. categories不显示链接，而tags正常 通过图片可看出categories没有链接，而其他正常 查看categories/index.md文件，有没有出现拼写错误或冒号后无空格现象 计算机相关1. 台式机硬盘如何接笔记本https://product.pconline.com.cn/itbk/bjbzj/notebook/1707/9553145.html 网络https://blog.csdn.net/qq_36868342/article/details/82821595 UserAgent CTF相关main（web）方面查看网页源代码 User error is common 用户错误很常见Source code can tell you a lot 源代码可以告诉你很多 网页标签会欺骗你，只显示一点点内容，而后面的……会显示password crypt方面算法常用排序算法http://www.cnblogs.com/eniac12/p/5329396.html]]></content>
      <categories>
        <category>Hello</category>
      </categories>
      <tags>
        <tag>Hello</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Fiddler使用入门到入土]]></title>
    <url>%2F2018%2F12%2F25%2FFiddler%E4%BD%BF%E7%94%A8%E5%88%9D%E6%8E%A2%2F</url>
    <content type="text"><![CDATA[Fiddler1.fiddler介绍介绍的话，抛一个链接到官网去看看吧https://www.telerik.com/fiddler 一个中文版本的Fiddlerhttps://bbs.125.la/forum.php?mod=viewthread&amp;tid=14106559 界面介绍 会话窗口 Result HTTP状态码 Protocol 请求使用的协议，如HTTP/HTTPS/FTP等 HOST 请求地址的主机名或域名 URL 请求资源的位置 Body 请求大小 Caching 请求的缓存过期时间或者缓存控制值 Content-Type 请求响应的类型 Process 发送此请求的进程ID Comments 备注 Custom 自定义值 Inspectors 抓包得到的数据在列表中显示，点击之后在右侧的Inspectors显示详细内容。 http request*statistics 各种请求时间、header、body之类的 *Inspectors（检查者）*Composer 将左侧请求拖到右侧，可更改登录信息，然后点击右上侧Excute *Filters show only Internte Hosts Run … Actions → now Flag the following Hosts Fiddler工作原理 &emsp;Fiddler的本质是一个局域网HTTP代理，即通过手动设置或自动设置，将局域网中的数据请求中转至软件内部的请求处理程序，再由Fiddler程序进行发送和接收请求，并解析至软件显示界面，同时将接受的请求结果返回给原始请求发送者。&emsp;使用的代理地址是：127.0.0.1，端口默认为8888，即默认监听127.0.0.1:8888。退出的时候它会自动注销代理，这样就不会影响别的程序。&emsp;Fiddler可以抓取支持http代理的任意程序的数据包，如果要抓取https会话需进行设置 Fiddler的工作流程 首先fiddler截获客户端浏览器发送给服务器的https请求,此时还未建立握手。 fiddler向服务器发送请求进行握手， 获取到服务器的CA证书， 用根证书公钥进行解密， 验证服务器数据签名， 获取到服务器CA证书公钥。 fiddler伪造自己的CA证书， 冒充服务器证书传递给客户端浏览器， 客户端浏览器做跟fiddler一样的事。 客户端浏览器生成https通信用的对称密钥， 用fiddler伪造的证书公钥加密后传递给服务器， 被fiddler截获。 fiddler将截获的密文用自己伪造证书的私钥解开， 获得https通信用的对称密钥。 fiddler将对称密钥用服务器证书公钥加密传递给服务器， 服务器用私钥解开后建立信任， 握手完成. 对称密钥加密消息，开始通信 fiddler接收到服务器发送的密文， 用对称密钥解开， 获得服务器发送的明文。再次加密， 发送给客户端浏览器。 客户端向服务器发送消息， 用对称密钥加密， 被fidller截获后， 解密获得明文 由于fiddler一直拥有通信用对称密钥， 所以在整个https通信过程中信息对其透明。 2. Fiddler的HTTP代理HTTP协议了解 超文本传输协议，基于请求与响应模式的、无状态的、应用层的协议 配置浏览器 Chorme、IE、FireFox Chorme、IE不需要做代理设置，FireFox需要手动更改,手动更改之后不再使用Fiddler时需恢复修改 端口设置端口一共有0~65535的范围，而在TCP/IP网络中，为各种公共服务保留的端口号范围是1~1023，其提出“协议端口”的概念，用于标识两个通信的进程。一般配置时使用1w+~6w+之间 配置fiddler允许监听到https fiddler默认只抓取http格式的 打开fiddler菜单Tools-&gt;Options-&gt;HTTPS 补充localhost，127.0.0.1 和 本机IP 三者的区别https://blog.csdn.net/hongxiaoshuang/article/details/52924527 https://blog.csdn.net/xiao_xing_yun/article/details/53412058 ##网页无法访问 如果Fiddler非正常退出，这时候因为Fiddler没有自动注销，会造成网页无法访问。 解决方法结合Fiddler的工作原理，可能是Fiddler没有自动注销造成，所以修改 IE浏览器的默认代理即可完成。打开IE浏览器-&gt;设置选项中-&gt; 连接-&gt; 局域网设置-&gt; 代理服务器取消掉。 参考文档：https://www.cnblogs.com/miantest/p/7289694.html https://docs.telerik.com/fiddler/Configure-Fiddler/Tasks/ConfigureBrowsers 给大家准备好刀了，一人一把，别抢 ！∝╬▅▆▅▆▅▆▅▆▅▆▅▆▇◤ ∝╬▅▆▅▆▅▆▅▆▅▆▅▆▇◤ ∝╬▅▆▅▆▅▆▅▆▅▆▅▆▇◤ ∝╬▅▆▅▆▅▆▅▆▅▆▅▆▇◤ ∝╬▅▆▅▆▅▆▅▆▅▆▅▆▇◤ ∝╬▅▆▅▆▅▆▅▆▅▆▅▆▇◤ ∝╬▅▆▅▆▅▆▅▆▅▆▅▆▇◤ ∝╬▅▆▅▆▅▆▅▆▅▆▅▆▇◤ ∝╬▅▆▅▆▅▆▅▆▅▆▅▆▇◤ ∝╬▅▆▅▆▅▆▅▆▅▆▅▆▇◤ ∝╬▅▆▅▆▅▆▅▆▅▆▅▆▇◤ ∝╬▅▆▅▆▅▆▅▆▅▆▅▆▇◤拿好了，大家，上！！]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[更新博客搭建]]></title>
    <url>%2F2018%2F12%2F23%2F%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[更新博客搭建 &emsp;作为一名在hexo方面赤果果的新手，我在博文写作方面遇到了很多问题，故特意将这些错误及其解决方案记录下来，以便日后查证之用，同时，也可给各位在遇到类似问题时提供一点参考。俗话说的好，好记性不如烂键盘^.^ Theme—Next &emsp;这个主题会有两个不是一个路径下的config文件需要更改，一个是在hexo的blog的root目录下，一个是在之后下载来的theme相关路径下的config文件 第一个是在站点根目录下，其中包含Hexo的配置 第二个是在主题根目录下，由NexT提供并包含主题的配置 1. 下载NextTheme 进入hexo的blog文件夹 git clone https://github.com/theme-next/hexo-theme-next themes/next 此处可以不用clone，可以直接进入网址下载文件，再复制粘贴到指定文件夹下（个人感觉这样速度快一些） 2. 更改config文件 Ctrl+F查找theme，enable:true theme的大的外观时由scheme控制，可更换其他样式 3. 测试效果 这样就已经安装并使用了next主题，但并没有想其他人的网站博客那样的个性化，接下来进行一下更多设置。 发布一篇新文章首先Ctrl+C停止当前的本地服务，然后 hexo n “我的第一篇文章Test”这样就会在博客目录下source_posts中生成相应的“Test.md”文件，之后编辑markdown文件就行 至于为何会出现一个Test文件夹，里面目前还是空的，无法判断用处，之后再了解（注意事项4） 美化主题1. 添加Fork me on Github点击这里或者这里挑选自己喜欢的样式，并复制代码。 复制样式的代码，放在themes/next/layout/_layout.swig文件中(放在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;的下面)，并把href改为你的github地址如图 效果 2. 在每篇文章末尾添加「致谢」 在路径\themes\next\layout\_macro中新建 passage-end-tag.swig 文件,并添加以下内容： &lt;div&gt; {% if not is_index %} ------------- 本文结束 感谢您的阅读 ------------- {% endif %} &lt;/div&gt; &ensp;2. 在post.swig文件中，post-footer 之前添加代码 &lt;div&gt; {% if not is_index %} {% include 'passage-end-tag.swig' %} {% endif %} &lt;/div&gt; &ensp;3. 在theme配置文件中启用passage_end_tag 3. 网站底部字数统计 博客根目录下$ npm install hexo-wordcount --save /themes/next/layout/_partials/footer.swig添加（位置可以换，调试调试就知道） &lt;div class=&quot;theme-info&quot;&gt; &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt; &lt;span class=&quot;post-count&quot;&gt;博客全站共{{ totalcount(site) }}字&lt;/span&gt; &lt;/div&gt; 也可以不需要设置这么多项目只安装插件，在theme/_comfig.yml中更改设置即可 4. 文章加密访问设置加密 打开themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig文件，在以下位置插入这样一段代码 代码如下 &lt;script&gt; (function () { if (&apos;{{ page.password }}&apos;) { if (prompt(&apos;请输入文章密码&apos;) !== &apos;{{ page.password }}&apos;) { alert(&apos;密码错误！&apos;); if (history.length === 1) { location.replace(&quot;https://....&quot;); // 这里替换成你的首页 } else { history.back(); } } } })(); &lt;/script&gt; &ensp;2. 在需要加密的文档中添加password关键字，并设置value read more控制文章内容显示–博文显示缩略 只需在写的文档中添加&lt;!--more--&gt;即可在该断点处显示 5. 更改标签图标 感觉这个#不太美观，修改： /themes/next/layout/_macro/post.swig，搜索rel=&quot;tag&quot;&gt;#，将#换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 6. 添加动态小live抛一个链接，按照链接操作吧。（默认好像就是我现在界面的样子，目前没学会换图标） 设置博文置顶 个人觉得没什么必要（目前），所以就不进行设置 Hexo重装与位置移动 &emsp;最近想要将笔记本重新更新一下，把所有文件都删掉再重装，这也就可能出现我没有想到的问题，所以就先查找一下重装之后的blog在本地笔记本上的新设置之类的内容 1. 重装 &emsp;安装基本配置应用程序，Git，Node.js,Hexo&emsp;hexo init→npm install hexo-deployer-git -save(类似初始化创建blog一样)&emsp;更改站点配置文件最后的几项内容，之后只需要修改主题，美化之类的即可 注意如果需要原博文内容，可以先复制原博文内容，再重装，将博文内容粘贴到_post文件夹内（目前没实际操作过，应该如此） 2. 位置移动只要将Hexo环境配置好之后，将原本地blog文件夹整个复制，然后放到一个新文件夹路径下即可（安装新系统之前先复制一份） 个人遇到的需要注意的事情1. 有时美化后无法显示 &emsp;个人一般只在/localhost:4000/中调试，$ hexo s --debug，小的改动可以通过刷新显示，但大的改动（比如美化主题）刷新有可能无法显示，可以先生成$ hexo g再$ hexo s --debug 2. 安装插件时出bug 解决及解释：https://docs.npmjs.com/cli/audit npm audit fix：修复所安装插件遇到的漏洞 npm audit：查看还有什么漏洞未解决 3. error deployer not found:git 的报错在hexo d时出现 这是因为 hexo 3.0 不适配 hexo 2.0 的bug 执行: npm install hexo-deployer-git --save 即可 4. Hexo图片显示问题 使用Markdown应用程序upload图片功能不会出现问题 使用之前说到的hexo n &quot;Test&quot;生成.md时，同时生成的一个/Source/_post/Test文件夹 安装插件npm install https://github.com/CodeFalling/hexo-asset-image --save或npm install hexo-asset-image --save 按照upload图片格式![这里输入图片描述]( Test/图片名.jpg)引用图片 还是markdown程序自带upload图片功能方便 参考文档：http://theme-next.iissnan.com/getting-started.html Next美化：http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html Next成品界面：ouxiaolong.github.io 推荐10款Python IDEhttp://www.runoob.com/w3cnote/best-python-ide-for-developers.html]]></content>
      <tags>
        <tag>Hexo博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F15%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Hello</category>
      </categories>
      <tags>
        <tag>Hello</tag>
      </tags>
  </entry>
</search>
